import{t as g,a as d,b as E}from"../chunks/W0dy3kP3.js";import{p as I,s as L,a as M,b as O,$ as U,c as t,e as o,d as W,r as e,n as l,g as r,t as T,u as j}from"../chunks/B4kb5hSp.js";import{s as D}from"../chunks/BJoo3Nve.js";import{N as G,e as J,i as Y}from"../chunks/BWI-EfxB.js";import{h as H}from"../chunks/FdDPwu-8.js";import{s as N}from"../chunks/taXoq1mL.js";import{s as K}from"../chunks/DdWPW7g8.js";import{o as Q}from"../chunks/DLXBg0Yq.js";import{C as i}from"../chunks/CrLx8h3l.js";import{N as V}from"../chunks/BH-Blyiu.js";const X=""+new URL("../assets/one-node.DnWFvYhA.svg",import.meta.url).href,ee=""+new URL("../assets/two-nodes.rfvwN8xp.svg",import.meta.url).href;var te=g(`The two-node placement method is <span class="font-medium">only suitable for components that can be represented with two connections</span>. For example, a MOSFET or BJT transistor requires three nodes, so it can only be
			placed using the one-node placement method.`,1),oe=g("<li><!></li>"),ae=g(`<div class="flex items-stretch"><main class="min-h-dvh p-5 pt-10 md:px-8 md:py-10"><h1>Positioning</h1> <p class="max-w-2xl text-lg">Circuitor simplifies component positioning through CeTZ, providing two methods for
			placing your circuit elements.</p> <h2>Component placement</h2> <p>To position components within your circuit, you can choose to either attach them to a
			single node, or place them between two nodes with automatic wiring.</p> <div class="mb-4 grid gap-7 md:grid-cols-2"><div><div class="dark:border-neutral-border mb-4 flex max-h-40 items-center overflow-hidden rounded-lg border border-neutral-200"><img class="w-full" alt="resistor using one-node placement"></div> <!></div> <div><div class="dark:border-neutral-border mb-4 flex max-h-40 items-center overflow-hidden rounded-lg border border-neutral-200"><img class="w-full" alt="resistor using one-node placement"></div> <!></div></div> <!> <h2>Cartesian coordinates</h2> <p>The most fundamental coordinate, like the example provided, is a <a href="https://typst.app/docs/reference/foundations/array/" target="_blank">Typst array</a> with two dimensions (<span class="font-mono">x</span> representing the horizontal
			position, and <span class="font-mono">y</span> the vertical).</p> <!> <h2 class="mt-3">Named anchors</h2> <p>Sometimes, you just want to connect a node from one component to another without
			worrying about coordinates or doing mental math. Thatâ€™s where named anchors come in.</p> <p>The name provided as the first argument acts as an identifier for the component, as
			shown below.</p> <!> <p>Now that this resistor is identified by its name <span class="font-mono">r1</span>, we
			can attach a voltage source to one of it's nodes like this.</p> <!> <p>The only slightly tricky part is knowing which sub-anchors each component provides, but
			don't worry, you can always refer to the <a href="/circuitor/docs/components/">components list</a> for a complete overview of available anchors.</p> <p>In most cases, especially with two-node components, you'll typically use <span class="font-mono">in</span> and <span class="font-mono">out</span>.</p> <h2 class="mt-3">Relative coordinates</h2> <p>Check the <a href="https://cetz-package.github.io/docs/basics/coordinate-systems/#relative">CeTZ documentation</a></p> <h2 class="mt-3">Orthogonal</h2> <p>Check the <a href="https://cetz-package.github.io/docs/basics/coordinate-systems/#relative">CeTZ documentation</a></p></main> <div class="relative hidden w-72 flex-none p-5 md:block"><ul class="sticky top-32 block"></ul></div></div>`);function ue(z,A){I(A,!0);let w=L(M([]));Q(()=>{const n=document.querySelectorAll("h1, h2, h3");W(w,Array.from(n).map((a,s)=>{const c=`heading-${s}`;return a.id=c,{level:parseInt(a.tagName.substring(1)),text:a.textContent||"",uid:c}}),!0)});var p=ae();H(n=>{U.title="Getting started"});var m=t(p),h=o(t(m),8),v=t(h),u=t(v),F=t(u);N(F,"src",X),e(u);var P=o(u,2);i(P,{content:`#circuitor.canvas({
    resistor("r1", (0,0))
})`}),e(v);var b=o(v,2),f=t(b),R=t(f);N(R,"src",ee),e(f);var S=o(f,2);i(S,{content:`#circuitor.canvas({
    resistor("r1", (0,0), (5,0))
})`}),e(b),e(h);var y=o(h,2);G(y,{type:"warning",title:"Warning",children:(n,a)=>{l();var s=te();l(2),d(n,s)},$$slots:{default:!0}});var x=o(y,6);i(x,{content:"#let myCoordinate = (0, 0)"});var _=o(x,8);i(_,{content:`#circuitor.canvas({
    resistor("r1", (0,0), (5,0))
})`});var Z=o(_,4);i(Z,{content:`#circuitor.canvas({
    resistor("r1", (0,0), (5,0))
    vsource("v1", "r1.out", (5,5))
})`}),l(12),e(m);var $=o(m,2),k=t($);J(k,21,()=>r(w),Y,(n,a)=>{var s=oe(),c=t(s);const q=j(()=>`#${r(a).uid}`);V(c,{get href(){return r(q)},children:(B,se)=>{l();var C=E();T(()=>D(C,r(a).text)),d(B,C)},$$slots:{default:!0}}),e(s),T(()=>K(s,`margin-left: ${r(a).level*10}px;`)),d(n,s)}),e(k),e($),e(p),d(z,p),O()}export{ue as component};
